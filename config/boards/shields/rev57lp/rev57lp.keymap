/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE    0
#define LOWER   1
#define BT      2
#define RAISE   3

/ {
    combos {
        compatible = "zmk,combos";
        
        combo_BOOT {
            timeout-ms = <50>;
            key-positions = <4 5 6 7>;
            bindings = <&bootloader>;
        };

        combo_BT {
            timeout-ms = <50>;
            key-positions = <49 56>;
            bindings = <&mo BT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp ESC      &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                           &kp N6     &kp N7     &kp N8     &kp N9    &kp N0     &kp BSPC
                &kp TAB      &kp Q      &kp W     &kp E     &kp R      &kp T                            &kp Y      &kp U      &kp I      &kp O     &kp P      &kp BSPC
                &kp LCTL     &kp A      &kp S     &kp D     &kp F      &kp G          &kp DEL           &kp H      &kp J      &kp K      &kp L     &kp SEMI   &kp SQT
                &kp LSHIFT   &kp Z      &kp X     &kp C     &kp V      &kp B                            &kp N      &kp M      &kp COMMA  &kp DOT   &kp SLASH  &kp RSHIFT
                                                  &kp LGUI  &lt LOWER SPACE  &kp SPACE  &kp SPACE  &kp RET    &kp BSPC   &lt RAISE BSPC  &kp RALT
                >;
        };

        lower {
            bindings = <
                &kp ESC    &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT                             &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR   &kp RPAR        &kp BSPC
                &kp TAB    &trans    &trans   &trans    &trans    &trans                                &trans     &trans     &trans           &trans     &trans          &trans
                &kp LCTL   &trans    &trans   &trans    &trans    &trans          &trans                &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT   &kp BSLH        &kp GRAVE
                &kp LSHIFT &trans    &trans   &trans    &trans    &trans                                &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC   &kp PIPE        &kp TILDE
                                              &none     &trans    &trans    &trans  &trans  &trans     &trans &trans
                >;
        };

        blutut {
            bindings = <
                &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4           &none  &none  &none  &none  &none  &none
                &none         &none         &none         &none         &none         &none                  &none  &none  &none  &none  &none  &none
                &none         &none         &none         &none         &none         &none     &bt BT_CLR   &none  &none  &none  &none  &none  &none
                &none         &none         &none         &none         &none         &none                  &none  &none  &none  &none  &none  &none
                                                                        &none  &none  &none   &none  &none   &none  &none  &none
                >;
        };
    };
};
